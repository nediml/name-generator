name: Build and Push docker image

on:
  push:
    branches:    
      - deploy

jobs:
  BuildAndPush:
    runs-on: ubuntu-latest

    # env:
    #   CODEDEPLOY_APP: web-master
    #   CODEDEPLOY_DEPLOYMENT_GROUP: ebok8np6q6wc
    #   CODEDEPLOY_APPSPEC_S3_URI: ebok8np6q6wc
    #   CODEDEPLOY_S3_APPSPEC: ebok8np6q6wc
    #   CODEDEPLOY_S3_APPSPEC: ebok8np6q6wc

    steps:
      - uses: actions/checkout@v1

      # Set AWS cli credentials to be used with following steps
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Login to ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Build and push docker image
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: lok-dev-ngs
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker images
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest  
  
  Deploy:
    runs-on: ubuntu-latest

    # env:
    #   CODEDEPLOY_APP: web-master
    #   CODEDEPLOY_DEPLOYMENT_GROUP: ebok8np6q6wc
    #   CODEDEPLOY_APPSPEC_S3_URI: ebok8np6q6wc
    #   CODEDEPLOY_S3_APPSPEC: ebok8np6q6wc
    #   CODEDEPLOY_S3_APPSPEC: ebok8np6q6wc

    steps:
      - uses: actions/checkout@v1

      # Set AWS cli credentials to be used with following steps
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Initiate deployment in CodeDeploy
      - name: Deploy
        run: |
          cd .github/workflows/codedeploy
          aws s3 cp appspec.yaml s3://lok-dev-appspec/ngs/appspec.yaml
          aws deploy create-deployment --cli-input-json file://create-deployment.json
      
      - name: Print URL to deployment status
        run: |
          echo "Please visit CodeDeploy console for the deployment status:"
          echo "https://console.aws.amazon.com/codesuite/codedeploy/deployments?region=us-east-1" 